{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\nexport default function Highscore(props) {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: highscores,\n    1: setHighscores\n  } = useState([]);\n\n  const handleSave = () => {\n    props.setView('home');\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = mode => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data.data);\n        setHighscores(data.data);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    height: ['100vh'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    p: 10,\n    align: \"center\",\n    justify: \"center\",\n    border: \"5px solid gold\",\n    borderRadius: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Congratulations!\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"You beat the high score!\"), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Do you want to add your username?\"), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, props.score), __jsx(Input, {\n    autoFocus: true,\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"date\")), highscores.map(highscore => {\n    return __jsx(Flex, {\n      key: highscore._id,\n      align: \"center\",\n      justify: \"space-between\",\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      width: \"150px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, highscore.score), __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, highscore.username), __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, highscore.createdAt));\n  }), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => handleSave(),\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid blue'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Save\"), __jsx(Button, {\n    onClick: () => props.setView('home'),\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid grey'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx"],"names":["React","useState","useEffect","Flex","Button","Stack","Box","Input","Highscore","props","username","setUsername","highscores","setHighscores","handleSave","setView","getHighscores","mode","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","catch","err","error","message","score","e","target","value","map","highscore","_id","createdAt","border","outline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\n\nexport default function Highscore(props: any) {\n  const [username, setUsername] = useState('');\n  const [highscores, setHighscores] = useState([]);\n\n  const handleSave = () => {\n    props.setView('home');\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = (mode: string) => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data.data);\n          setHighscores(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  return (\n    <>\n      <Flex width={['100%']} height={['100vh']} align=\"center\" justify=\"center\">\n        <Flex\n          p={10}\n          align=\"center\"\n          justify=\"center\"\n          border=\"5px solid gold\"\n          borderRadius=\"10px\"\n        >\n          <Stack spacing={3}>\n            <Box>Congratulations!</Box>\n            <Box>You beat the high score!</Box>\n            <Box>Do you want to add your username?</Box>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Box>{props.score}</Box>\n              <Input\n                autoFocus\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                type=\"number\"\n                value={username}\n                onChange={(e: any) => setUsername(e.target.value)}\n              />\n              <Box>date</Box>\n            </Flex>\n            {highscores.map((highscore: any) => {\n              return (\n                <Flex\n                  key={highscore._id}\n                  align=\"center\"\n                  justify=\"space-between\"\n                  direction=\"row\"\n                >\n                  <Box width=\"150px\">{highscore.score}</Box>\n                  <Box>{highscore.username}</Box>\n                  <Box>{highscore.createdAt}</Box>\n                </Flex>\n              );\n            })}\n            <Flex align=\"center\" justify=\"space-evenly\" direction=\"row\">\n              <Button\n                onClick={() => handleSave()}\n                variant=\"outline\"\n                _hover={{ border: '1px solid blue' }}\n                _focus={{ outline: 'none' }}\n              >\n                Save\n              </Button>\n              <Button\n                onClick={() => props.setView('home')}\n                variant=\"outline\"\n                _hover={{ border: '1px solid grey' }}\n                _focus={{ outline: 'none' }}\n              >\n                Cancel\n              </Button>\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}