{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Box, Stack, Input } from '@chakra-ui/core';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport { useToast } from '@chakra-ui/core';\nexport default function Play(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(1),\n      number1 = _useState[0],\n      setNumber1 = _useState[1];\n\n  var _useState2 = useState(2),\n      number2 = _useState2[0],\n      setNumber2 = _useState2[1];\n\n  var _useState3 = useState(1),\n      level = _useState3[0],\n      setLevel = _useState3[1];\n\n  var _useState4 = useState(''),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(0),\n      answer = _useState5[0],\n      setAnswer = _useState5[1];\n\n  var toast = useToast();\n\n  var generateNumbers = function generateNumbers() {\n    var num1 = Math.floor(Math.random() * level * 2 + 1);\n    var num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n    setAnswer(num1 + num2);\n  };\n\n  useEffect(function () {\n    generateNumbers();\n  }, []);\n  useEffect(function () {\n    window.addEventListener('keydown', handleKeyDown);\n    return function () {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  var handleChange = function handleChange(e) {\n    var tempInput = Number(e.target.value);\n\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      console.log('wrong');\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"white\",\n            p: 3,\n            bg: \"red.500\",\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }\n          }, \"wrong\");\n        }\n      });\n      setInput('');\n    } else {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"white\",\n            p: 3,\n            bg: \"yellow.500\",\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }\n          }, \"correct\");\n        }\n      });\n      setLevel(level + 1);\n      setInput('');\n      generateNumbers();\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    m: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    color: \"gold\",\n    fontSize: \"32px\",\n    variant: \"ghost\",\n    _hover: {\n      color: 'white'\n    },\n    _active: {\n      bg: 'none'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      return props.setView('start');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(BiHomeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))), __jsx(Flex, {\n    width: ['100%'],\n    height: ['100%'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    fontSize: \"40px\",\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, level)), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, number1), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"+\"), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, number2), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"=\"))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    autoFocus: true,\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    value: input,\n    onChange: function onChange(e) {\n      handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n_s(Play, \"zkbw1BFUo3hjeOLMIpH4O33Y6rQ=\", false, function () {\n  return [useToast];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx"],"names":["React","useState","useEffect","Flex","Button","Box","Stack","Input","BiHomeAlt","useToast","Play","props","number1","setNumber1","number2","setNumber2","level","setLevel","input","setInput","answer","setAnswer","toast","generateNumbers","num1","Math","floor","random","num2","window","addEventListener","handleKeyDown","removeEventListener","handleChange","e","tempInput","Number","target","value","toString","length","console","log","position","duration","render","color","bg","outline","setView"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,iBAAtD;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AAAA;;AAAA;;AAAA,kBACTV,QAAQ,CAAC,CAAD,CADC;AAAA,MAChCW,OADgC;AAAA,MACvBC,UADuB;;AAAA,mBAETZ,QAAQ,CAAC,CAAD,CAFC;AAAA,MAEhCa,OAFgC;AAAA,MAEvBC,UAFuB;;AAAA,mBAGbd,QAAQ,CAAC,CAAD,CAHK;AAAA,MAGhCe,KAHgC;AAAA,MAGzBC,QAHyB;;AAAA,mBAIbhB,QAAQ,CAAC,EAAD,CAJK;AAAA,MAIhCiB,KAJgC;AAAA,MAIzBC,QAJyB;;AAAA,mBAKXlB,QAAQ,CAAC,CAAD,CALG;AAAA,MAKhCmB,MALgC;AAAA,MAKxBC,SALwB;;AAMvC,MAAMC,KAAK,GAAGb,QAAQ,EAAtB;;AAEA,MAAMc,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,KAAhB,GAAwB,CAAxB,GAA4B,CAAvC,CAAb;AACA,QAAMY,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBX,KAAK,GAAG,CAAzB,IAA8B,CAA9B,GAAkC,CAA7C,CAAb;AACAH,IAAAA,UAAU,CAACW,IAAD,CAAV;AACAT,IAAAA,UAAU,CAACa,IAAD,CAAV;AACAP,IAAAA,SAAS,CAACG,IAAI,GAAGI,IAAR,CAAT;AACD,GAND;;AAQA1B,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;AAIArB,EAAAA,SAAS,CAAC,YAAM;AACd2B,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,aAAnC;AAEA,WAAO,YAAM;AACXF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsCD,aAAtC;AACD,KAFD;AAGD,GANQ,CAAT;;AAOA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAY;AAC/B,QAAMC,SAAS,GAAGC,MAAM,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAxB;;AACA,QAAIH,SAAS,CAACI,QAAV,GAAqBC,MAArB,GAA8BpB,MAAM,CAACmB,QAAP,GAAkBC,MAApD,EAA4D;AAC1DrB,MAAAA,QAAQ,CAACgB,SAAS,CAACI,QAAV,EAAD,CAAR;AACD,KAFD,MAEO,IAAIJ,SAAS,KAAKf,MAAlB,EAA0B;AAC/BqB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACApB,MAAAA,KAAK,CAAC;AACJqB,QAAAA,QAAQ,EAAE,KADN;AAEJC,QAAAA,QAAQ,EAAE,GAFN;AAGJC,QAAAA,MAAM,EAAE;AAAA,iBACN,MAAC,GAAD;AAAK,YAAA,CAAC,EAAE,CAAR;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAyB,YAAA,CAAC,EAAE,CAA5B;AAA+B,YAAA,EAAE,EAAC,SAAlC;AAA4C,YAAA,YAAY,EAAC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADM;AAAA;AAHJ,OAAD,CAAL;AASA1B,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KAZM,MAYA;AACLG,MAAAA,KAAK,CAAC;AACJqB,QAAAA,QAAQ,EAAE,KADN;AAEJC,QAAAA,QAAQ,EAAE,GAFN;AAGJC,QAAAA,MAAM,EAAE;AAAA,iBACN,MAAC,GAAD;AAAK,YAAA,CAAC,EAAE,CAAR;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAyB,YAAA,CAAC,EAAE,CAA5B;AAA+B,YAAA,EAAE,EAAC,YAAlC;AAA+C,YAAA,YAAY,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADM;AAAA;AAHJ,OAAD,CAAL;AASA5B,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,MAAAA,eAAe;AAChB;AACF,GA9BD;;AAgCA,SACE,4BACE,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,QAAQ,EAAC,MAFX;AAGE,IAAA,OAAO,EAAC,OAHV;AAIE,IAAA,MAAM,EAAE;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAJV;AAKE,IAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KALX;AAME,IAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KANV;AAOE,IAAA,OAAO,EAAE;AAAA,aAAMrC,KAAK,CAACsC,OAAN,CAAc,OAAd,CAAN;AAAA,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,EAcE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,MAAD,CAAb;AAAuB,IAAA,MAAM,EAAE,CAAC,MAAD,CAA/B;AAAyC,IAAA,KAAK,EAAC,QAA/C;AAAwD,IAAA,OAAO,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAsC,IAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,MAAd;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjC,KADH,CADF,CADF,EAME,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAsC,IAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,QAA7B;AAAsC,IAAA,QAAQ,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OADH,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,QAA7B;AAAsC,IAAA,QAAQ,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EAOE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,QAA7B;AAAsC,IAAA,QAAQ,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OADH,CAPF,EAUE,MAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,SAAS,EAAC,QAA7B;AAAsC,IAAA,QAAQ,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVF,CADF,CANF,EAsBE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAsC,IAAA,SAAS,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,SAAS,EAAC,QAHZ;AAIE,IAAA,QAAQ,EAAC,MAJX;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,KAAK,EAAEI,KANT;AAOE,IAAA,QAAQ,EAAE,kBAACgB,CAAD,EAAY;AACpBD,MAAAA,YAAY,CAACC,CAAD,CAAZ;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF,CADF,CAdF,CADF;AAyDD;;GApHuBxB,I;UAMRD,Q;;;KANQC,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Box, Text, Stack, Input } from '@chakra-ui/core';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport { useToast } from '@chakra-ui/core';\n\nexport default function Play(props: any) {\n  const [number1, setNumber1] = useState(1);\n  const [number2, setNumber2] = useState(2);\n  const [level, setLevel] = useState(1);\n  const [input, setInput] = useState('');\n  const [answer, setAnswer] = useState(0);\n  const toast = useToast();\n\n  const generateNumbers = () => {\n    const num1 = Math.floor(Math.random() * level * 2 + 1);\n    const num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n    setAnswer(num1 + num2);\n  };\n\n  useEffect(() => {\n    generateNumbers();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n  const handleChange = (e: any) => {\n    const tempInput = Number(e.target.value);\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      console.log('wrong');\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"white\" p={3} bg=\"red.500\" borderRadius=\"5px\">\n            wrong\n          </Box>\n        ),\n      });\n      setInput('');\n    } else {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"white\" p={3} bg=\"yellow.500\" borderRadius=\"5px\">\n            correct\n          </Box>\n        ),\n      });\n      setLevel(level + 1);\n      setInput('');\n      generateNumbers();\n    }\n  };\n\n  return (\n    <>\n      <Box m=\"20px\">\n        <Button\n          color=\"gold\"\n          fontSize=\"32px\"\n          variant=\"ghost\"\n          _hover={{ color: 'white' }}\n          _active={{ bg: 'none' }}\n          _focus={{ outline: 'none' }}\n          onClick={() => props.setView('start')}\n        >\n          <BiHomeAlt />\n        </Button>\n      </Box>\n      <Flex width={['100%']} height={['100%']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={20}>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Box fontSize=\"40px\" color=\"yellow\">\n                {level}\n              </Box>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Stack isInline>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {number1}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  +\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {number2}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  =\n                </Box>\n              </Stack>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Input\n                autoFocus\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                type=\"number\"\n                value={input}\n                onChange={(e: any) => {\n                  handleChange(e);\n                }}\n              />\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}