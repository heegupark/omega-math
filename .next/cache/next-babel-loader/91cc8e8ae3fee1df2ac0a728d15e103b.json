{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport { Flex, Button, Box, Stack, Input, useToast, Modal, ModalContent, ModalBody, useDisclosure, Badge, Slider, SliderTrack, SliderFilledTrack, SliderThumb } from '@chakra-ui/core';\nexport default function Play(props) {\n  const {\n    0: number1,\n    1: setNumber1\n  } = useState(1);\n  const {\n    0: number2,\n    1: setNumber2\n  } = useState(2);\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: answer,\n    1: setAnswer\n  } = useState(0);\n  const {\n    0: prevAnswers,\n    1: setPrevAnswers\n  } = useState([]);\n  const {\n    0: score,\n    1: setScore\n  } = useState(0);\n  const {\n    0: highscore,\n    1: setHighscore\n  } = useState(0);\n  const {\n    0: isResetting,\n    1: setIsResetting\n  } = useState(false);\n  const {\n    0: symbol,\n    1: setSymbol\n  } = useState('+');\n  const {\n    0: time,\n    1: setTime\n  } = useState(100);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: modalCategory,\n    1: setModalCategory\n  } = useState('ready');\n  const toast = useToast();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const prevAnsDisplayNumber = 5;\n\n  const generateNumbers = () => {\n    setIsResetting(false);\n    const num1 = Math.floor(Math.random() * level * 2 + 1);\n    const num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n\n    switch (props.mode) {\n      case 'add':\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n\n      case 'subtract':\n        if (num2 > num1) {\n          setNumber1(num2);\n          setNumber2(num1);\n          setAnswer(num2 - num1);\n        } else {\n          setNumber1(num1);\n          setNumber2(num2);\n          setAnswer(num1 - num2);\n        }\n\n        break;\n\n      case 'multiply':\n        setAnswer(num1 * num2);\n        break;\n\n      case 'divide':\n        setNumber1(num1 * num2);\n        setNumber2(num2);\n        setAnswer(num1);\n        break;\n\n      default:\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n    }\n\n    setIsResetting(true);\n  };\n\n  useEffect(() => {\n    switch (props.mode) {\n      case 'add':\n        setSymbol('+');\n        break;\n\n      case 'subtract':\n        setSymbol('-');\n        break;\n\n      case 'multiply':\n        setSymbol('×');\n        break;\n\n      case 'divide':\n        setSymbol('÷');\n        break;\n\n      default:\n        setSymbol('+');\n        break;\n    }\n  }, []);\n\n  const handleKeyDown = e => {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(() => {\n    getHighscore(props.mode);\n  }, []);\n  useEffect(() => {\n    let timer = null;\n\n    if (isActive) {\n      timer = setInterval(() => {\n        if (time > 0) setTime(time - 0.1);\n\n        if (time <= 0) {\n          setTime(0);\n          gameOver();\n          clearInterval(timer);\n        }\n      }, 10);\n    } else if (!isActive && time !== 0) {\n      clearInterval(timer);\n    }\n\n    return () => clearInterval(timer);\n  }, [isActive, time]);\n  useEffect(() => {\n    generateNumbers();\n  }, []);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleChange = e => {\n    const tempInput = Number(input.concat(e.key));\n\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => __jsx(Box, {\n          m: 3,\n          color: \"red.500\",\n          p: 3,\n          borderRadius: \"5px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }\n        }, \"wrong\")\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'red.500',\n        answer: `${number1} + ${number2} ≠ ${tempInput}`\n      }, ...prevAnswers]);\n      setInput('');\n    } else {\n      setIsActive(false);\n      setTime(100);\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => __jsx(Box, {\n          m: 3,\n          color: \"green.500\",\n          p: 3,\n          borderRadius: \"5px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }\n        }, \"correct\")\n      });\n      const newScore = score + 10;\n      setScore(newScore);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'green.500',\n        answer: `${number1} + ${number2} = ${tempInput}`\n      }, ...prevAnswers]);\n      setInput('');\n      generateNumbers();\n      setIsActive(true);\n    }\n  };\n\n  const getHighscore = mode => {\n    fetch(`/api/gethighscore`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setHighscore(data.data.score);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  const handleHomeBtnClick = () => {\n    setIsActive(false);\n    onOpen();\n  };\n\n  const handleGoHome = () => {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  const gameOver = () => {\n    setIsActive(false);\n    setModalCategory('gameover');\n  };\n\n  let sliderColor = null;\n\n  switch (true) {\n    case time > 80:\n      sliderColor = 'green';\n      break;\n\n    case time > 60:\n      sliderColor = 'blue';\n      break;\n\n    case time > 40:\n      sliderColor = 'yellow';\n      break;\n\n    case time > 20:\n      sliderColor = 'orange';\n      break;\n\n    default:\n      sliderColor = 'red';\n  }\n\n  const play = () => {\n    setTime(100);\n    setIsActive(true);\n  };\n\n  let modalElement = null;\n\n  switch (modalCategory) {\n    case 'gohome':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }\n      }, \"Do you want to quit?\"), __jsx(Flex, {\n        align: \"center\",\n        justify: \"space-evenly\",\n        direction: \"row\",\n        backgroundColor: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: () => handleGoHome(),\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }\n      }, \"Yes\"), __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: () => {\n          setIsActive(true);\n          onClose();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }\n      }, \"Close\")));\n      break;\n\n    case 'gameover':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, \"Game Over\"), __jsx(Flex, {\n        align: \"center\",\n        justify: \"space-evenly\",\n        direction: \"row\",\n        backgroundColor: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: () => handleGoHome(),\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }\n      }, \"Home\"), __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: () => {\n          restart();\n          onClose();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, \"Restart\")));\n      break;\n\n    case 'ready':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }\n      }, __jsx(Flex, {\n        align: \"center\",\n        justify: \"space-evenly\",\n        direction: \"row\",\n        backgroundColor: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: () => play(),\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }\n      }, \"Start\"))));\n      break;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    align: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    color: \"gold\",\n    fontSize: \"32px\",\n    variant: \"ghost\",\n    _hover: {\n      color: 'white'\n    },\n    _active: {\n      bg: 'none'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    onClick: () => handleHomeBtnClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, __jsx(BiHomeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, \"Highscore\"), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, highscore))), __jsx(Flex, {\n    width: ['100%'],\n    height: ['100%'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, score > highscore ? __jsx(Badge, {\n    variantColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 19\n    }\n  }, \"new highscore\") : 'Score'), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 19\n    }\n  }, __jsx(CountUp, {\n    start: score > 0 ? score - 10 : 0,\n    end: score,\n    duration: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 21\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, __jsx(Slider, {\n    color: sliderColor,\n    defaultValue: 100,\n    value: time,\n    size: \"sm\",\n    width: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 15\n    }\n  }, __jsx(SliderTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }), __jsx(SliderFilledTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  }), __jsx(SliderThumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }\n  }))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 35\n    }\n  }, \" \", number1)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, symbol), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 35\n    }\n  }, \" \", number2)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 17\n    }\n  }, \"=\"))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    autoFocus: true,\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    value: input,\n    onChange: e => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  })), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }\n  }, prevAnswers.length > 0 && __jsx(React.Fragment, null, __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    m: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, \"previous answers\"), __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }, prevAnswers.map((answer, index) => {\n    return __jsx(Box, {\n      key: index,\n      color: answer.color,\n      fontSize: `${24 - index * 2}px`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 25\n      }\n    }, answer.answer);\n  })))))), __jsx(Modal, {\n    isCentered: true,\n    isOpen: isOpen,\n    onClose: onClose,\n    closeOnEsc: false,\n    closeOnOverlayClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, __jsx(ModalContent, {\n    border: \"5px solid gold\",\n    backgroundColor: \"black\",\n    borderRadius: \"10px\",\n    height: \"175px\",\n    opacity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, modalElement))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx"],"names":["React","useState","useEffect","BiHomeAlt","CountUp","Flex","Button","Box","Stack","Input","useToast","Modal","ModalContent","ModalBody","useDisclosure","Badge","Slider","SliderTrack","SliderFilledTrack","SliderThumb","Play","props","number1","setNumber1","number2","setNumber2","level","setLevel","input","setInput","answer","setAnswer","prevAnswers","setPrevAnswers","score","setScore","highscore","setHighscore","isResetting","setIsResetting","symbol","setSymbol","time","setTime","isActive","setIsActive","modalCategory","setModalCategory","toast","isOpen","onOpen","onClose","prevAnsDisplayNumber","generateNumbers","num1","Math","floor","random","num2","mode","handleKeyDown","e","Number","key","handleChange","getHighscore","timer","setInterval","gameOver","clearInterval","window","addEventListener","removeEventListener","tempInput","concat","toString","length","position","duration","render","pop","color","newScore","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","catch","err","console","error","message","handleHomeBtnClick","handleGoHome","setIsNewHighscore","setNewscore","setView","sliderColor","play","modalElement","outline","restart","bg","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport {\n  Flex,\n  Button,\n  Box,\n  Stack,\n  Input,\n  useToast,\n  Modal,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Badge,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from '@chakra-ui/core';\n\nexport default function Play(props: any) {\n  const [number1, setNumber1] = useState(1);\n  const [number2, setNumber2] = useState(2);\n  const [level, setLevel] = useState(1);\n  const [input, setInput] = useState('');\n  const [answer, setAnswer] = useState(0);\n  const [prevAnswers, setPrevAnswers] = useState([] as any);\n  const [score, setScore] = useState(0);\n  const [highscore, setHighscore] = useState(0);\n  const [isResetting, setIsResetting] = useState(false);\n  const [symbol, setSymbol] = useState('+');\n  const [time, setTime] = useState(100);\n  const [isActive, setIsActive] = useState(false);\n  const [modalCategory, setModalCategory] = useState('ready');\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const prevAnsDisplayNumber = 5;\n\n  const generateNumbers = () => {\n    setIsResetting(false);\n    const num1 = Math.floor(Math.random() * level * 2 + 1);\n    const num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n\n    switch (props.mode) {\n      case 'add':\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n      case 'subtract':\n        if (num2 > num1) {\n          setNumber1(num2);\n          setNumber2(num1);\n          setAnswer(num2 - num1);\n        } else {\n          setNumber1(num1);\n          setNumber2(num2);\n          setAnswer(num1 - num2);\n        }\n        break;\n      case 'multiply':\n        setAnswer(num1 * num2);\n        break;\n      case 'divide':\n        setNumber1(num1 * num2);\n        setNumber2(num2);\n        setAnswer(num1);\n        break;\n      default:\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n    }\n    setIsResetting(true);\n  };\n\n  useEffect(() => {\n    switch (props.mode) {\n      case 'add':\n        setSymbol('+');\n        break;\n      case 'subtract':\n        setSymbol('-');\n        break;\n      case 'multiply':\n        setSymbol('×');\n        break;\n      case 'divide':\n        setSymbol('÷');\n        break;\n      default:\n        setSymbol('+');\n        break;\n    }\n  }, []);\n\n  const handleKeyDown = (e: any) => {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(() => {\n    getHighscore(props.mode);\n  }, []);\n\n  useEffect(() => {\n    let timer = null as any;\n    if (isActive) {\n      timer = setInterval(() => {\n        if (time > 0) setTime(time - 0.1);\n        if (time <= 0) {\n          setTime(0);\n          gameOver();\n          clearInterval(timer);\n        }\n      }, 10);\n    } else if (!isActive && time !== 0) {\n      clearInterval(timer);\n    }\n    return () => clearInterval(timer);\n  }, [isActive, time]);\n\n  useEffect(() => {\n    generateNumbers();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleChange = (e: any) => {\n    const tempInput = Number(input.concat(e.key));\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"red.500\" p={3} borderRadius=\"5px\">\n            wrong\n          </Box>\n        ),\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        { color: 'red.500', answer: `${number1} + ${number2} ≠ ${tempInput}` },\n        ...prevAnswers,\n      ]);\n      setInput('');\n    } else {\n      setIsActive(false);\n      setTime(100);\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"green.500\" p={3} borderRadius=\"5px\">\n            correct\n          </Box>\n        ),\n      });\n      const newScore = score + 10;\n      setScore(newScore);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        {\n          color: 'green.500',\n          answer: `${number1} + ${number2} = ${tempInput}`,\n        },\n        ...prevAnswers,\n      ]);\n      setInput('');\n      generateNumbers();\n      setIsActive(true);\n    }\n  };\n\n  const getHighscore = (mode: string) => {\n    fetch(`/api/gethighscore`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          setHighscore(data.data.score);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const handleHomeBtnClick = () => {\n    setIsActive(false);\n    onOpen();\n  };\n\n  const handleGoHome = () => {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  const gameOver = () => {\n    setIsActive(false);\n    setModalCategory('gameover');\n  };\n\n  let sliderColor = null;\n  switch (true) {\n    case time > 80:\n      sliderColor = 'green';\n      break;\n    case time > 60:\n      sliderColor = 'blue';\n      break;\n    case time > 40:\n      sliderColor = 'yellow';\n      break;\n    case time > 20:\n      sliderColor = 'orange';\n      break;\n    default:\n      sliderColor = 'red';\n  }\n\n  const play = () => {\n    setTime(100);\n    setIsActive(true);\n  };\n\n  let modalElement = null;\n  switch (modalCategory) {\n    case 'gohome':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            Do you want to quit?\n          </ModalBody>\n          <Flex\n            align=\"center\"\n            justify=\"space-evenly\"\n            direction=\"row\"\n            backgroundColor=\"gold\"\n          >\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => handleGoHome()}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Yes\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => {\n                setIsActive(true);\n                onClose();\n              }}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Close\n            </Button>\n          </Flex>\n        </>\n      );\n      break;\n    case 'gameover':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            Game Over\n          </ModalBody>\n          <Flex\n            align=\"center\"\n            justify=\"space-evenly\"\n            direction=\"row\"\n            backgroundColor=\"gold\"\n          >\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => handleGoHome()}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Home\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => {\n                restart();\n                onClose();\n              }}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Restart\n            </Button>\n          </Flex>\n        </>\n      );\n      break;\n    case 'ready':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            <Flex\n              align=\"center\"\n              justify=\"space-evenly\"\n              direction=\"row\"\n              backgroundColor=\"gold\"\n            >\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                color=\"black\"\n                onClick={() => play()}\n                _focus={{ outline: 'none' }}\n                _hover={{ color: 'grey' }}\n              >\n                Start\n              </Button>\n            </Flex>\n          </ModalBody>\n        </>\n      );\n      break;\n  }\n\n  return (\n    <>\n      <Flex width={['100%']} align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\">\n            <Button\n              color=\"gold\"\n              fontSize=\"32px\"\n              variant=\"ghost\"\n              _hover={{ color: 'white' }}\n              _active={{ bg: 'none' }}\n              _focus={{ outline: 'none' }}\n              onClick={() => handleHomeBtnClick()}\n            >\n              <BiHomeAlt />\n            </Button>\n          </Box>\n        </Flex>\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n            Highscore\n          </Box>\n          <Box fontSize=\"22px\" textAlign=\"center\">\n            {highscore}\n          </Box>\n        </Flex>\n      </Flex>\n      <Flex width={['100%']} height={['100%']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={20}>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n                {score > highscore ? (\n                  <Badge variantColor=\"green\">new highscore</Badge>\n                ) : (\n                  'Score'\n                )}\n              </Box>\n              <Box fontSize=\"22px\" textAlign=\"center\">\n                {isResetting && (\n                  <Box className=\"bounce\">\n                    <CountUp\n                      start={score > 0 ? score - 10 : 0}\n                      end={score}\n                      duration={1}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Slider\n                color={sliderColor}\n                defaultValue={100}\n                value={time}\n                size=\"sm\"\n                width=\"200px\"\n              >\n                <SliderTrack />\n                <SliderFilledTrack />\n                <SliderThumb />\n              </Slider>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Stack isInline>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number1}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {symbol}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number2}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  =\n                </Box>\n              </Stack>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Input\n                autoFocus\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                type=\"number\"\n                value={input}\n                onChange={(e: any) => {}}\n              />\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              {prevAnswers.length > 0 && (\n                <>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"16px\" m={5}>\n                    previous answers\n                  </Box>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"24px\">\n                    {prevAnswers.map((answer: any, index: number) => {\n                      return (\n                        <Box\n                          key={index}\n                          color={answer.color}\n                          fontSize={`${24 - index * 2}px`}\n                        >\n                          {answer.answer}\n                        </Box>\n                      );\n                    })}\n                  </Box>\n                </>\n              )}\n            </Flex>\n          </Stack>\n        </Flex>\n        <Modal\n          isCentered\n          isOpen={isOpen}\n          onClose={onClose}\n          closeOnEsc={false}\n          closeOnOverlayClick={false}\n        >\n          <ModalContent\n            border=\"5px solid gold\"\n            backgroundColor=\"black\"\n            borderRadius=\"10px\"\n            height=\"175px\"\n            opacity={1}\n          >\n            {modalElement}\n          </ModalContent>\n        </Modal>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}