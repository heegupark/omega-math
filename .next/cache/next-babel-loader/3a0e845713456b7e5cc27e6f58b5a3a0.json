{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\nexport default function Highscore(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(new Array(10)),\n      highscores = _useState2[0],\n      setHighscores = _useState2[1];\n\n  var handleSave = function handleSave() {\n    props.setView('home');\n  };\n\n  useEffect(function () {\n    getHighscores('add');\n  }, []);\n\n  var getHighscores = function getHighscores(mode) {\n    fetch(\"/api/gethighscores\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode: mode\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        console.log(highscores); // setHighscores(data.data);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  var convertDate = function convertDate(date) {\n    return \"\".concat(new Date(date).getMonth() + 1, \"/\").concat(new Date(date).getDate(), \"/\").concat(new Date(date).getFullYear());\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    height: ['100vh'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Flex // p={10}\n  , {\n    align: \"center\",\n    justify: \"center\",\n    border: \"5px solid gold\",\n    borderRadius: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 3,\n    height: \"600px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    textAlign: \"center\",\n    backgroundColor: \"gold\",\n    height: \"30px\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Highscore\"), __jsx(Box, {\n    height: \"500px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    px: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, props.score), __jsx(Input, {\n    autoFocus: true,\n    width: \"150px\",\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    mx: 5,\n    borderBottom: \"1px solid white\",\n    value: username,\n    onChange: function onChange(e) {\n      return setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, convertDate(new Date()))), highscores.map(function (highscore) {\n    return __jsx(Flex, {\n      key: highscore._id,\n      align: \"center\",\n      justify: \"space-evenly\",\n      direction: \"row\",\n      px: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, __jsx(Box, {\n      width: \"100px\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, highscore.score), __jsx(Box, {\n      mx: 5,\n      width: \"150px\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, highscore.username), __jsx(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, convertDate(highscore.createdAt)));\n  })), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return handleSave();\n    },\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid blue'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Save\"), __jsx(Button, {\n    onClick: function onClick() {\n      return props.setView('home');\n    },\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid grey'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))));\n}\n\n_s(Highscore, \"P07OzdEc90OCrwjsEImj3UeLamc=\");\n\n_c = Highscore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highscore\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx"],"names":["React","useState","useEffect","Flex","Button","Stack","Box","Input","Highscore","props","username","setUsername","Array","highscores","setHighscores","handleSave","setView","getHighscores","mode","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","err","error","message","convertDate","date","Date","getMonth","getDate","getFullYear","score","e","target","value","map","highscore","_id","createdAt","border","outline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\n\nexport default function Highscore(props: any) {\n  const [username, setUsername] = useState('');\n  const [highscores, setHighscores] = useState(new Array(10));\n\n  const handleSave = () => {\n    props.setView('home');\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = (mode: string) => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(highscores);\n          // setHighscores(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const convertDate = (date: Date) => {\n    return `${new Date(date).getMonth() + 1}/${new Date(\n      date\n    ).getDate()}/${new Date(date).getFullYear()}`;\n  };\n\n  return (\n    <>\n      <Flex width={['100%']} height={['100vh']} align=\"center\" justify=\"center\">\n        <Flex\n          // p={10}\n          align=\"center\"\n          justify=\"center\"\n          border=\"5px solid gold\"\n          borderRadius=\"10px\"\n        >\n          <Stack spacing={3} height=\"600px\">\n            <Box\n              textAlign=\"center\"\n              backgroundColor=\"gold\"\n              height=\"30px\"\n              color=\"black\"\n            >\n              Highscore\n            </Box>\n            <Box height=\"500px\">\n              <Flex\n                align=\"center\"\n                justify=\"space-evenly\"\n                direction=\"row\"\n                px={3}\n              >\n                <Box width=\"100px\">{props.score}</Box>\n                <Input\n                  autoFocus\n                  width=\"150px\"\n                  variant=\"unstyled\"\n                  textAlign=\"center\"\n                  fontSize=\"32px\"\n                  type=\"number\"\n                  mx={5}\n                  borderBottom=\"1px solid white\"\n                  value={username}\n                  onChange={(e: any) => setUsername(e.target.value)}\n                />\n                <Box>{convertDate(new Date())}</Box>\n              </Flex>\n              {highscores.map((highscore: any) => {\n                return (\n                  <Flex\n                    key={highscore._id}\n                    align=\"center\"\n                    justify=\"space-evenly\"\n                    direction=\"row\"\n                    px={3}\n                  >\n                    <Box width=\"100px\" textAlign=\"center\">\n                      {highscore.score}\n                    </Box>\n                    <Box mx={5} width=\"150px\" textAlign=\"center\">\n                      {highscore.username}\n                    </Box>\n                    <Box>{convertDate(highscore.createdAt)}</Box>\n                  </Flex>\n                );\n              })}\n            </Box>\n            <Flex align=\"center\" justify=\"space-evenly\" direction=\"row\">\n              <Button\n                onClick={() => handleSave()}\n                variant=\"outline\"\n                _hover={{ border: '1px solid blue' }}\n                _focus={{ outline: 'none' }}\n              >\n                Save\n              </Button>\n              <Button\n                onClick={() => props.setView('home')}\n                variant=\"outline\"\n                _hover={{ border: '1px solid grey' }}\n                _focus={{ outline: 'none' }}\n              >\n                Cancel\n              </Button>\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}