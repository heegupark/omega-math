{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport { Flex, Button, Box, Stack, Input, useToast, Modal, ModalContent, ModalBody, useDisclosure, Badge } from '@chakra-ui/core';\nexport default function Play(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(1),\n      number1 = _useState[0],\n      setNumber1 = _useState[1];\n\n  var _useState2 = useState(2),\n      number2 = _useState2[0],\n      setNumber2 = _useState2[1];\n\n  var _useState3 = useState(1),\n      level = _useState3[0],\n      setLevel = _useState3[1];\n\n  var _useState4 = useState(''),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(0),\n      answer = _useState5[0],\n      setAnswer = _useState5[1];\n\n  var _useState6 = useState([]),\n      prevAnswers = _useState6[0],\n      setPrevAnswers = _useState6[1];\n\n  var _useState7 = useState(0),\n      score = _useState7[0],\n      setScore = _useState7[1];\n\n  var _useState8 = useState(0),\n      highscore = _useState8[0],\n      setHighscore = _useState8[1];\n\n  var _useState9 = useState(false),\n      isResetting = _useState9[0],\n      setIsResetting = _useState9[1];\n\n  var toast = useToast();\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var prevAnsDisplayNumber = 5;\n\n  var generateNumbers = function generateNumbers() {\n    setIsResetting(false);\n    var num1 = Math.floor(Math.random() * level * 2 + 1);\n    var num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n    setAnswer(num1 + num2);\n    setIsResetting(true);\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(function () {\n    getHighscore('add');\n  }, []);\n  useEffect(function () {\n    generateNumbers();\n  }, []);\n  useEffect(function () {\n    window.addEventListener('keydown', handleKeyDown);\n    return function () {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  var handleChange = function handleChange(e) {\n    var tempInput = Number(input.concat(e.key));\n\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"red.500\",\n            p: 3,\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 11\n            }\n          }, \"wrong\");\n        }\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'red.500',\n        answer: \"\".concat(number1, \" + \").concat(number2, \" \\u2260 \").concat(tempInput)\n      }].concat(_toConsumableArray(prevAnswers)));\n      setInput('');\n    } else {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"green.500\",\n            p: 3,\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }\n          }, \"correct\");\n        }\n      });\n      var newScore = score + 10;\n      setScore(newScore);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'green.500',\n        answer: \"\".concat(number1, \" + \").concat(number2, \" = \").concat(tempInput)\n      }].concat(_toConsumableArray(prevAnswers)));\n      setInput('');\n      generateNumbers();\n    }\n  };\n\n  var getHighscore = function getHighscore(mode) {\n    fetch(\"/api/gethighscore\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode: mode\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        setHighscore(data.data.score);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  var handleHomeBtnClick = function handleHomeBtnClick() {\n    onOpen();\n  };\n\n  var handleGoHome = function handleGoHome() {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    align: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    color: \"gold\",\n    fontSize: \"32px\",\n    variant: \"ghost\",\n    _hover: {\n      color: 'white'\n    },\n    _active: {\n      bg: 'none'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      return handleHomeBtnClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(BiHomeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Highscore\"), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, highscore))), __jsx(Flex, {\n    width: ['100%'],\n    height: ['100%'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, score > highscore ? __jsx(Badge, {\n    variantColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"new highscore\") : 'Score'), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, __jsx(CountUp, {\n    start: score > 0 ? score - 10 : 0,\n    end: score,\n    duration: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 35\n    }\n  }, \" \", number1)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"+\"), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 35\n    }\n  }, \" \", number2)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \"=\"))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    autoFocus: true,\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    value: input,\n    onChange: function onChange(e) {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 15\n    }\n  })), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, prevAnswers.length > 0 && __jsx(React.Fragment, null, __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    m: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }, \"previous answers\"), __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, prevAnswers.map(function (answer, index) {\n    return __jsx(Box, {\n      color: answer.color,\n      fontSize: \"24-\".concat(index * 1, \"px\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, answer.answer);\n  })))))), __jsx(Modal, {\n    isCentered: true,\n    isOpen: isOpen,\n    onClose: onClose,\n    closeOnOverlayClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, __jsx(ModalContent, {\n    border: \"5px solid gold\",\n    backgroundColor: \"black\",\n    borderRadius: \"10px\",\n    height: \"175px\",\n    opacity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, __jsx(ModalBody, {\n    m: 10,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"Do you want to quit?\"), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    backgroundColor: \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    variant: \"ghost\",\n    size: \"sm\",\n    color: \"black\",\n    onClick: function onClick() {\n      return handleGoHome();\n    },\n    _focus: {\n      outline: 'none'\n    },\n    _hover: {\n      color: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 15\n    }\n  }, \"Yes\"), __jsx(Button, {\n    variant: \"ghost\",\n    size: \"sm\",\n    color: \"black\",\n    onClick: onClose,\n    _focus: {\n      outline: 'none'\n    },\n    _hover: {\n      color: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, \"Close\"))))));\n}\n\n_s(Play, \"Vy7e2PXUPV3PpYjWkFHvMjV4sjY=\", false, function () {\n  return [useToast, useDisclosure];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx"],"names":["React","useState","useEffect","BiHomeAlt","CountUp","Flex","Button","Box","Stack","Input","useToast","Modal","ModalContent","ModalBody","useDisclosure","Badge","Play","props","number1","setNumber1","number2","setNumber2","level","setLevel","input","setInput","answer","setAnswer","prevAnswers","setPrevAnswers","score","setScore","highscore","setHighscore","isResetting","setIsResetting","toast","isOpen","onOpen","onClose","prevAnsDisplayNumber","generateNumbers","num1","Math","floor","random","num2","handleKeyDown","e","Number","key","handleChange","getHighscore","window","addEventListener","removeEventListener","tempInput","concat","toString","length","position","duration","render","pop","color","newScore","mode","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","err","console","error","message","handleHomeBtnClick","handleGoHome","setIsNewHighscore","setNewscore","setView","bg","outline","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport {\n  Flex,\n  Button,\n  Box,\n  Stack,\n  Input,\n  useToast,\n  Modal,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Badge,\n} from '@chakra-ui/core';\n\nexport default function Play(props: any) {\n  const [number1, setNumber1] = useState(1);\n  const [number2, setNumber2] = useState(2);\n  const [level, setLevel] = useState(1);\n  const [input, setInput] = useState('');\n  const [answer, setAnswer] = useState(0);\n  const [prevAnswers, setPrevAnswers] = useState([] as any);\n  const [score, setScore] = useState(0);\n  const [highscore, setHighscore] = useState(0);\n  const [isResetting, setIsResetting] = useState(false);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const prevAnsDisplayNumber = 5;\n\n  const generateNumbers = () => {\n    setIsResetting(false);\n    const num1 = Math.floor(Math.random() * level * 2 + 1);\n    const num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n    setAnswer(num1 + num2);\n    setIsResetting(true);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(() => {\n    getHighscore('add');\n  }, []);\n\n  useEffect(() => {\n    generateNumbers();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleChange = (e: any) => {\n    const tempInput = Number(input.concat(e.key));\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"red.500\" p={3} borderRadius=\"5px\">\n            wrong\n          </Box>\n        ),\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        { color: 'red.500', answer: `${number1} + ${number2} ≠ ${tempInput}` },\n        ...prevAnswers,\n      ]);\n      setInput('');\n    } else {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"green.500\" p={3} borderRadius=\"5px\">\n            correct\n          </Box>\n        ),\n      });\n      const newScore = score + 10;\n      setScore(newScore);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        {\n          color: 'green.500',\n          answer: `${number1} + ${number2} = ${tempInput}`,\n        },\n        ...prevAnswers,\n      ]);\n      setInput('');\n      generateNumbers();\n    }\n  };\n\n  const getHighscore = (mode: string) => {\n    fetch(`/api/gethighscore`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          setHighscore(data.data.score);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const handleHomeBtnClick = () => {\n    onOpen();\n  };\n\n  const handleGoHome = () => {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  return (\n    <>\n      <Flex width={['100%']} align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\">\n            <Button\n              color=\"gold\"\n              fontSize=\"32px\"\n              variant=\"ghost\"\n              _hover={{ color: 'white' }}\n              _active={{ bg: 'none' }}\n              _focus={{ outline: 'none' }}\n              onClick={() => handleHomeBtnClick()}\n            >\n              <BiHomeAlt />\n            </Button>\n          </Box>\n        </Flex>\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n            Highscore\n          </Box>\n          <Box fontSize=\"22px\" textAlign=\"center\">\n            {highscore}\n          </Box>\n        </Flex>\n      </Flex>\n      <Flex width={['100%']} height={['100%']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={20}>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n                {score > highscore ? (\n                  <Badge variantColor=\"green\">new highscore</Badge>\n                ) : (\n                  'Score'\n                )}\n              </Box>\n              <Box fontSize=\"22px\" textAlign=\"center\">\n                {isResetting && (\n                  <Box className=\"bounce\">\n                    <CountUp\n                      start={score > 0 ? score - 10 : 0}\n                      end={score}\n                      duration={1}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Stack isInline>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number1}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  +\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number2}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  =\n                </Box>\n              </Stack>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Input\n                autoFocus\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                type=\"number\"\n                value={input}\n                onChange={(e: any) => {}}\n              />\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              {prevAnswers.length > 0 && (\n                <>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"16px\" m={5}>\n                    previous answers\n                  </Box>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"24px\">\n                    {prevAnswers.map((answer: any, index: number) => {\n                      return (\n                        <Box\n                          color={answer.color}\n                          fontSize={`24-${index * 1}px`}\n                        >\n                          {answer.answer}\n                        </Box>\n                      );\n                    })}\n                  </Box>\n                </>\n              )}\n            </Flex>\n          </Stack>\n        </Flex>\n        <Modal\n          isCentered\n          isOpen={isOpen}\n          onClose={onClose}\n          closeOnOverlayClick={false}\n        >\n          <ModalContent\n            border=\"5px solid gold\"\n            backgroundColor=\"black\"\n            borderRadius=\"10px\"\n            height=\"175px\"\n            opacity={1}\n          >\n            <ModalBody m={10} textAlign=\"center\">\n              Do you want to quit?\n            </ModalBody>\n            <Flex\n              align=\"center\"\n              justify=\"space-evenly\"\n              direction=\"row\"\n              backgroundColor=\"gold\"\n            >\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                color=\"black\"\n                onClick={() => handleGoHome()}\n                _focus={{ outline: 'none' }}\n                _hover={{ color: 'grey' }}\n              >\n                Yes\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                color=\"black\"\n                onClick={onClose}\n                _focus={{ outline: 'none' }}\n                _hover={{ color: 'grey' }}\n              >\n                Close\n              </Button>\n            </Flex>\n          </ModalContent>\n        </Modal>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}