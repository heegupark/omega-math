{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport { Flex, Button, Box, Stack, Input, useToast, Modal, ModalContent, ModalBody, useDisclosure, Badge, Slider, SliderTrack, SliderFilledTrack, SliderThumb } from '@chakra-ui/core';\nexport default function Play(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(1),\n      number1 = _useState[0],\n      setNumber1 = _useState[1];\n\n  var _useState2 = useState(2),\n      number2 = _useState2[0],\n      setNumber2 = _useState2[1];\n\n  var _useState3 = useState(1),\n      level = _useState3[0],\n      setLevel = _useState3[1];\n\n  var _useState4 = useState(''),\n      input = _useState4[0],\n      setInput = _useState4[1];\n\n  var _useState5 = useState(0),\n      answer = _useState5[0],\n      setAnswer = _useState5[1];\n\n  var _useState6 = useState([]),\n      prevAnswers = _useState6[0],\n      setPrevAnswers = _useState6[1];\n\n  var _useState7 = useState(0),\n      score = _useState7[0],\n      setScore = _useState7[1];\n\n  var _useState8 = useState(0),\n      highscore = _useState8[0],\n      setHighscore = _useState8[1];\n\n  var _useState9 = useState(false),\n      isResetting = _useState9[0],\n      setIsResetting = _useState9[1];\n\n  var _useState10 = useState('+'),\n      symbol = _useState10[0],\n      setSymbol = _useState10[1];\n\n  var _useState11 = useState(100),\n      time = _useState11[0],\n      setTime = _useState11[1];\n\n  var _useState12 = useState(false),\n      isActive = _useState12[0],\n      setIsActive = _useState12[1];\n\n  var _useState13 = useState('ready'),\n      modalCategory = _useState13[0],\n      setModalCategory = _useState13[1];\n\n  var toast = useToast();\n\n  var _useDisclosure = useDisclosure(true),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  var prevAnsDisplayNumber = 5;\n\n  var generateNumbers = function generateNumbers() {\n    setIsResetting(false);\n    var num1 = Math.floor(Math.random() * level * 2 + 1);\n    var num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n\n    switch (props.mode) {\n      case 'add':\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n\n      case 'subtract':\n        if (num2 > num1) {\n          setNumber1(num2);\n          setNumber2(num1);\n          setAnswer(num2 - num1);\n        } else {\n          setNumber1(num1);\n          setNumber2(num2);\n          setAnswer(num1 - num2);\n        }\n\n        break;\n\n      case 'multiply':\n        setAnswer(num1 * num2);\n        break;\n\n      case 'divide':\n        setNumber1(num1 * num2);\n        setNumber2(num2);\n        setAnswer(num1);\n        break;\n\n      default:\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n    }\n\n    setIsResetting(true);\n  };\n\n  useEffect(function () {\n    switch (props.mode) {\n      case 'add':\n        setSymbol('+');\n        break;\n\n      case 'subtract':\n        setSymbol('-');\n        break;\n\n      case 'multiply':\n        setSymbol('×');\n        break;\n\n      case 'divide':\n        setSymbol('÷');\n        break;\n\n      default:\n        setSymbol('+');\n        break;\n    }\n  }, []);\n\n  var handleKeyDown = function handleKeyDown(e) {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(function () {\n    getHighscore(props.mode);\n  }, []);\n  useEffect(function () {\n    var timer = 0;\n\n    if (isActive) {\n      timer = window.setInterval(function () {\n        if (time > 0) setTime(time - 0.1);\n\n        if (time <= 0) {\n          setTime(0);\n          gameOver();\n          clearInterval(timer);\n        }\n      }, 10);\n    } else if (!isActive && time !== 0) {\n      clearInterval(timer);\n    }\n\n    return function () {\n      return clearInterval(timer);\n    };\n  }, [isActive, time]);\n  useEffect(function () {\n    generateNumbers();\n  }, []);\n  useEffect(function () {\n    window.addEventListener('keydown', function () {\n      return handleKeyDown;\n    });\n    return function () {\n      window.removeEventListener('keydown', function () {\n        return handleKeyDown;\n      });\n    };\n  });\n\n  var handleChange = function handleChange(e) {\n    var tempInput = Number(input.concat(e.key));\n\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"red.500\",\n            p: 3,\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }\n          }, \"wrong\");\n        }\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'red.500',\n        answer: \"\".concat(number1, \" + \").concat(number2, \" \\u2260 \").concat(tempInput)\n      }].concat(_toConsumableArray(prevAnswers)));\n      setInput('');\n    } else {\n      setIsActive(false);\n      toast({\n        position: 'top',\n        duration: 500,\n        render: function render() {\n          return __jsx(Box, {\n            m: 3,\n            color: \"green.500\",\n            p: 3,\n            borderRadius: \"5px\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 11\n            }\n          }, \"correct\");\n        }\n      });\n      var newScore = score + 10;\n      setScore(newScore);\n      console.log(level);\n      var nextLevelTime = 100 - (level - 1) * 2;\n      setTime(nextLevelTime > 30 ? nextLevelTime : 30);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([{\n        color: 'green.500',\n        answer: \"\".concat(number1, \" + \").concat(number2, \" = \").concat(tempInput)\n      }].concat(_toConsumableArray(prevAnswers)));\n      setInput('');\n      generateNumbers();\n      setIsActive(true);\n    }\n  };\n\n  var getHighscore = function getHighscore(mode) {\n    fetch(\"/api/gethighscore\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode: mode\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        setHighscore(data.data.score);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  var handleHomeBtnClick = function handleHomeBtnClick() {\n    setIsActive(false);\n    setModalCategory('gohome');\n    onOpen();\n  };\n\n  var handleGoHome = function handleGoHome() {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  var gameOver = function gameOver() {\n    setIsActive(false);\n    setModalCategory('gameover');\n    onOpen();\n  };\n\n  var sliderColor = null;\n\n  switch (true) {\n    case time > 80:\n      sliderColor = 'green';\n      break;\n\n    case time > 60:\n      sliderColor = 'blue';\n      break;\n\n    case time > 40:\n      sliderColor = 'yellow';\n      break;\n\n    case time > 20:\n      sliderColor = 'orange';\n      break;\n\n    default:\n      sliderColor = 'red';\n  }\n\n  var restart = function restart() {\n    setModalCategory('ready');\n  };\n\n  var play = function play() {\n    setScore(0);\n    setLevel(1);\n    setTime(100);\n    setIsActive(true);\n    setInput('');\n    onClose();\n  };\n\n  var modalElement = null;\n\n  switch (modalCategory) {\n    case 'gohome':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }\n      }, \"Do you want to quit?\"), __jsx(Flex, {\n        align: \"center\",\n        justify: \"space-evenly\",\n        direction: \"row\",\n        backgroundColor: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: function onClick() {\n          return handleGoHome();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }\n      }, \"Yes\"), __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: function onClick() {\n          setIsActive(true);\n          onClose();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, \"Close\")));\n      break;\n\n    case 'gameover':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, \"Game Over\"), __jsx(Flex, {\n        align: \"center\",\n        justify: \"space-evenly\",\n        direction: \"row\",\n        backgroundColor: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: function onClick() {\n          return handleGoHome();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, \"Home\"), __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        color: \"black\",\n        onClick: function onClick() {\n          restart();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }\n      }, \"Restart\")));\n      break;\n\n    case 'ready':\n      modalElement = __jsx(React.Fragment, null, __jsx(ModalBody, {\n        m: 10,\n        textAlign: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        variant: \"ghost\",\n        size: \"sm\",\n        m: 5,\n        color: \"black\",\n        width: \"100px\",\n        backgroundColor: \"gold\",\n        onClick: function onClick() {\n          return play();\n        },\n        _focus: {\n          outline: 'none'\n        },\n        _hover: {\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }\n      }, \"Start\")));\n      break;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    align: \"center\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    color: \"gold\",\n    fontSize: \"32px\",\n    variant: \"ghost\",\n    _hover: {\n      color: 'white'\n    },\n    _active: {\n      bg: 'none'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      return handleHomeBtnClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, __jsx(BiHomeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, \"Highscore\"), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 11\n    }\n  }, highscore))), __jsx(Flex, {\n    width: ['100%'],\n    height: ['100%'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    m: \"2\",\n    textAlign: \"center\",\n    fontSize: \"12px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, score > highscore ? __jsx(Badge, {\n    variantColor: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 19\n    }\n  }, \"new highscore\") : 'Score'), __jsx(Box, {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, __jsx(CountUp, {\n    start: score > 0 ? score - 10 : 0,\n    end: score,\n    duration: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  })))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, __jsx(Slider, {\n    color: sliderColor,\n    defaultValue: 100,\n    value: time,\n    size: \"sm\",\n    width: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, __jsx(SliderTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }), __jsx(SliderFilledTrack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }), __jsx(SliderThumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 17\n    }\n  }))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 35\n    }\n  }, \" \", number1)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  }, symbol), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  }, isResetting && __jsx(Box, {\n    className: \"bounce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 35\n    }\n  }, \" \", number2)), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  }, \"=\"))), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    fontSize: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, \"Yout answer here\"), __jsx(Input, {\n    autoFocus: true,\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    pattern: \"[0-9]*\",\n    value: input,\n    borderBottom: \"1px double white\",\n    borderRadius: \"0px\",\n    width: \"100px\",\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  })), __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 13\n    }\n  }, prevAnswers.length > 0 && __jsx(React.Fragment, null, __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    m: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 19\n    }\n  }, \"previous answers\"), __jsx(Box, {\n    width: \"200px\",\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 19\n    }\n  }, prevAnswers.map(function (answer, index) {\n    return __jsx(Box, {\n      key: index,\n      color: answer.color,\n      fontSize: \"\".concat(24 - index * 2, \"px\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 25\n      }\n    }, answer.answer);\n  })))))), __jsx(Modal, {\n    isCentered: true,\n    isOpen: isOpen,\n    onClose: onClose,\n    closeOnEsc: false,\n    closeOnOverlayClick: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }\n  }, __jsx(ModalContent, {\n    border: \"5px solid gold\",\n    backgroundColor: \"black\",\n    borderRadius: \"10px\",\n    height: \"175px\",\n    opacity: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, modalElement))));\n}\n\n_s(Play, \"ghlW0wmTYdFChv+BznDM9zfi6Bw=\", false, function () {\n  return [useToast, useDisclosure];\n});\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx"],"names":["React","useState","useEffect","BiHomeAlt","CountUp","Flex","Button","Box","Stack","Input","useToast","Modal","ModalContent","ModalBody","useDisclosure","Badge","Slider","SliderTrack","SliderFilledTrack","SliderThumb","Play","props","number1","setNumber1","number2","setNumber2","level","setLevel","input","setInput","answer","setAnswer","prevAnswers","setPrevAnswers","score","setScore","highscore","setHighscore","isResetting","setIsResetting","symbol","setSymbol","time","setTime","isActive","setIsActive","modalCategory","setModalCategory","toast","isOpen","onOpen","onClose","prevAnsDisplayNumber","generateNumbers","num1","Math","floor","random","num2","mode","handleKeyDown","e","Number","key","handleChange","getHighscore","timer","window","setInterval","gameOver","clearInterval","addEventListener","removeEventListener","tempInput","concat","toString","length","position","duration","render","pop","color","newScore","console","log","nextLevelTime","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","err","error","message","handleHomeBtnClick","handleGoHome","setIsNewHighscore","setNewscore","setView","sliderColor","restart","play","modalElement","outline","bg","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, KeyboardEvent } from 'react';\nimport { BiHomeAlt } from 'react-icons/bi';\nimport CountUp from 'react-countup';\nimport {\n  Flex,\n  Button,\n  Box,\n  Stack,\n  Input,\n  useToast,\n  Modal,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Badge,\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n} from '@chakra-ui/core';\nimport IPlayProps from './interfaces/iplayprops';\nimport IPrevAnswer from './interfaces/iprevanswer';\nimport IHighScore from './interfaces/ihighscore';\n\nexport default function Play(props: IPlayProps) {\n  const [number1, setNumber1] = useState(1);\n  const [number2, setNumber2] = useState(2);\n  const [level, setLevel] = useState(1);\n  const [input, setInput] = useState('');\n  const [answer, setAnswer] = useState<number>(0);\n  const [prevAnswers, setPrevAnswers] = useState<Array<IPrevAnswer>>([]);\n  const [score, setScore] = useState(0);\n  const [highscore, setHighscore] = useState(0);\n  const [isResetting, setIsResetting] = useState(false);\n  const [symbol, setSymbol] = useState('+');\n  const [time, setTime] = useState(100);\n  const [isActive, setIsActive] = useState(false);\n  const [modalCategory, setModalCategory] = useState('ready');\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure(true);\n  const prevAnsDisplayNumber = 5;\n\n  const generateNumbers = () => {\n    setIsResetting(false);\n    const num1 = Math.floor(Math.random() * level * 2 + 1);\n    const num2 = Math.floor(Math.random() * (level + 1) * 2 + 1);\n    setNumber1(num1);\n    setNumber2(num2);\n\n    switch (props.mode) {\n      case 'add':\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n      case 'subtract':\n        if (num2 > num1) {\n          setNumber1(num2);\n          setNumber2(num1);\n          setAnswer(num2 - num1);\n        } else {\n          setNumber1(num1);\n          setNumber2(num2);\n          setAnswer(num1 - num2);\n        }\n        break;\n      case 'multiply':\n        setAnswer(num1 * num2);\n        break;\n      case 'divide':\n        setNumber1(num1 * num2);\n        setNumber2(num2);\n        setAnswer(num1);\n        break;\n      default:\n        setNumber1(num1);\n        setNumber2(num2);\n        setAnswer(num1 + num2);\n        break;\n    }\n    setIsResetting(true);\n  };\n\n  useEffect(() => {\n    switch (props.mode) {\n      case 'add':\n        setSymbol('+');\n        break;\n      case 'subtract':\n        setSymbol('-');\n        break;\n      case 'multiply':\n        setSymbol('×');\n        break;\n      case 'divide':\n        setSymbol('÷');\n        break;\n      default:\n        setSymbol('+');\n        break;\n    }\n  }, []);\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (Number(e.key) >= 0 && Number(e.key) <= 9) {\n      handleChange(e);\n    }\n  };\n\n  useEffect(() => {\n    getHighscore(props.mode);\n  }, []);\n\n  useEffect(() => {\n    let timer: number = 0;\n    if (isActive) {\n      timer = window.setInterval(() => {\n        if (time > 0) setTime(time - 0.1);\n        if (time <= 0) {\n          setTime(0);\n          gameOver();\n          clearInterval(timer);\n        }\n      }, 10);\n    } else if (!isActive && time !== 0) {\n      clearInterval(timer);\n    }\n    return () => clearInterval(timer);\n  }, [isActive, time]);\n\n  useEffect(() => {\n    generateNumbers();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('keydown', () => handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', () => handleKeyDown);\n    };\n  });\n\n  const handleChange = (e: KeyboardEvent) => {\n    const tempInput = Number(input.concat(e.key));\n    if (tempInput.toString().length < answer.toString().length) {\n      setInput(tempInput.toString());\n    } else if (tempInput !== answer) {\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"red.500\" p={3} borderRadius=\"5px\">\n            wrong\n          </Box>\n        ),\n      });\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        { color: 'red.500', answer: `${number1} + ${number2} ≠ ${tempInput}` },\n        ...prevAnswers,\n      ]);\n      setInput('');\n    } else {\n      setIsActive(false);\n      toast({\n        position: 'top',\n        duration: 500,\n        render: () => (\n          <Box m={3} color=\"green.500\" p={3} borderRadius=\"5px\">\n            correct\n          </Box>\n        ),\n      });\n      const newScore = score + 10;\n      setScore(newScore);\n      console.log(level);\n      const nextLevelTime = 100 - (level - 1) * 2;\n      setTime(nextLevelTime > 30 ? nextLevelTime : 30);\n      setLevel(level + 1);\n      if (prevAnswers.length >= prevAnsDisplayNumber) prevAnswers.pop();\n      setPrevAnswers([\n        {\n          color: 'green.500',\n          answer: `${number1} + ${number2} = ${tempInput}`,\n        },\n        ...prevAnswers,\n      ]);\n      setInput('');\n      generateNumbers();\n      setIsActive(true);\n    }\n  };\n\n  const getHighscore = (mode: string) => {\n    fetch(`/api/gethighscore`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: IHighScore) => {\n        if (data.success) {\n          setHighscore(data.data.score);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const handleHomeBtnClick = () => {\n    setIsActive(false);\n    setModalCategory('gohome');\n    onOpen();\n  };\n\n  const handleGoHome = () => {\n    if (score > highscore) {\n      props.setIsNewHighscore(true);\n      props.setNewscore(score);\n      props.setView('highscore');\n    } else {\n      props.setView('home');\n    }\n  };\n\n  const gameOver = () => {\n    setIsActive(false);\n    setModalCategory('gameover');\n    onOpen();\n  };\n\n  let sliderColor = null;\n  switch (true) {\n    case time > 80:\n      sliderColor = 'green';\n      break;\n    case time > 60:\n      sliderColor = 'blue';\n      break;\n    case time > 40:\n      sliderColor = 'yellow';\n      break;\n    case time > 20:\n      sliderColor = 'orange';\n      break;\n    default:\n      sliderColor = 'red';\n  }\n\n  const restart = () => {\n    setModalCategory('ready');\n  };\n\n  const play = () => {\n    setScore(0);\n    setLevel(1);\n    setTime(100);\n    setIsActive(true);\n    setInput('');\n    onClose();\n  };\n\n  let modalElement = null;\n  switch (modalCategory) {\n    case 'gohome':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            Do you want to quit?\n          </ModalBody>\n          <Flex\n            align=\"center\"\n            justify=\"space-evenly\"\n            direction=\"row\"\n            backgroundColor=\"gold\"\n          >\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => handleGoHome()}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Yes\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => {\n                setIsActive(true);\n                onClose();\n              }}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Close\n            </Button>\n          </Flex>\n        </>\n      );\n      break;\n    case 'gameover':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            Game Over\n          </ModalBody>\n          <Flex\n            align=\"center\"\n            justify=\"space-evenly\"\n            direction=\"row\"\n            backgroundColor=\"gold\"\n          >\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => handleGoHome()}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Home\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              color=\"black\"\n              onClick={() => {\n                restart();\n              }}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Restart\n            </Button>\n          </Flex>\n        </>\n      );\n      break;\n    case 'ready':\n      modalElement = (\n        <>\n          <ModalBody m={10} textAlign=\"center\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              m={5}\n              color=\"black\"\n              width=\"100px\"\n              backgroundColor=\"gold\"\n              onClick={() => play()}\n              _focus={{ outline: 'none' }}\n              _hover={{ color: 'grey' }}\n            >\n              Start\n            </Button>\n          </ModalBody>\n        </>\n      );\n      break;\n  }\n\n  return (\n    <>\n      <Flex width={['100%']} align=\"center\" justify=\"space-between\">\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\">\n            <Button\n              color=\"gold\"\n              fontSize=\"32px\"\n              variant=\"ghost\"\n              _hover={{ color: 'white' }}\n              _active={{ bg: 'none' }}\n              _focus={{ outline: 'none' }}\n              onClick={() => handleHomeBtnClick()}\n            >\n              <BiHomeAlt />\n            </Button>\n          </Box>\n        </Flex>\n        <Flex align=\"center\" justify=\"center\" direction=\"column\">\n          <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n            Highscore\n          </Box>\n          <Box fontSize=\"22px\" textAlign=\"center\">\n            {highscore}\n          </Box>\n        </Flex>\n      </Flex>\n      <Flex width={['100%']} height={['100%']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={20}>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              <Box m=\"2\" textAlign=\"center\" fontSize=\"12px\">\n                {score > highscore ? (\n                  <Badge variantColor=\"green\">new highscore</Badge>\n                ) : (\n                  'Score'\n                )}\n              </Box>\n              <Box fontSize=\"22px\" textAlign=\"center\">\n                {isResetting && (\n                  <Box className=\"bounce\">\n                    <CountUp\n                      start={score > 0 ? score - 10 : 0}\n                      end={score}\n                      duration={1}\n                    />\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Slider\n                color={sliderColor}\n                defaultValue={100}\n                value={time}\n                size=\"sm\"\n                width=\"200px\"\n              >\n                <SliderTrack />\n                <SliderFilledTrack />\n                <SliderThumb />\n              </Slider>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Stack isInline>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number1}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {symbol}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  {isResetting && <Box className=\"bounce\"> {number2}</Box>}\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  =\n                </Box>\n              </Stack>\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              <Box fontSize=\"10px\">Yout answer here</Box>\n              <Input\n                autoFocus\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                pattern=\"[0-9]*\"\n                value={input}\n                borderBottom=\"1px double white\"\n                borderRadius=\"0px\"\n                width=\"100px\"\n                onChange={(e: any) => handleChange(e)}\n              />\n            </Flex>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n              {prevAnswers.length > 0 && (\n                <>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"16px\" m={5}>\n                    previous answers\n                  </Box>\n                  <Box width=\"200px\" textAlign=\"center\" fontSize=\"24px\">\n                    {prevAnswers.map((answer: IPrevAnswer, index: number) => {\n                      return (\n                        <Box\n                          key={index}\n                          color={answer.color}\n                          fontSize={`${24 - index * 2}px`}\n                        >\n                          {answer.answer}\n                        </Box>\n                      );\n                    })}\n                  </Box>\n                </>\n              )}\n            </Flex>\n          </Stack>\n        </Flex>\n        <Modal\n          isCentered\n          isOpen={isOpen}\n          onClose={onClose}\n          closeOnEsc={false}\n          closeOnOverlayClick={false}\n        >\n          <ModalContent\n            border=\"5px solid gold\"\n            backgroundColor=\"black\"\n            borderRadius=\"10px\"\n            height=\"175px\"\n            opacity={1}\n          >\n            {modalElement}\n          </ModalContent>\n        </Modal>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}