{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/home.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Flex, Button, Stack } from '@chakra-ui/core';\nimport { useDisclosure, Box } from '@chakra-ui/core';\nexport default function Home(props) {\n  _s();\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose;\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    height: ['100vh'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Try to beat the high score!\"), __jsx(Button, {\n    onClick: function onClick() {\n      return props.setView('play');\n    },\n    variantColor: \"blue\",\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid blue'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Start\"), __jsx(Button, {\n    onClick: function onClick() {\n      return onOpen();\n    },\n    color: \"gold\",\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid yellow'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Highscore\")))));\n}\n\n_s(Home, \"b6HgRGUKK6FEfELRcVwOTS4RtgI=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/home.tsx"],"names":["React","Flex","Button","Stack","useDisclosure","Box","Home","props","isOpen","onOpen","onClose","setView","border","outline"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAMEC,aANF,EAOEC,GAPF,QAQO,iBARP;AASA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AAAA;;AAAA,uBACHH,aAAa,EADV;AAAA,MAC/BI,MAD+B,kBAC/BA,MAD+B;AAAA,MACvBC,MADuB,kBACvBA,MADuB;AAAA,MACfC,OADe,kBACfA,OADe;;AAGvC,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC,MAAD,CAAb;AAAuB,IAAA,MAAM,EAAE,CAAC,OAAD,CAA/B;AAA0C,IAAA,KAAK,EAAC,QAAhD;AAAyD,IAAA,OAAO,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAqB,IAAA,OAAO,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,EAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACI,OAAN,CAAc,MAAd,CAAN;AAAA,KADX;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAJV;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAWE,MAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMJ,MAAM,EAAZ;AAAA,KADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,MAAM,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAJV;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF,CADF,CADF,CADF,CADF;AAuDD;;GA1DuBP,I;UACcF,a;;;KADdE,I","sourcesContent":["import React from 'react';\nimport { Flex, Button, Stack } from '@chakra-ui/core';\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useDisclosure,\n  Box,\n} from '@chakra-ui/core';\nexport default function Home(props: any) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Flex width={['100%']} height={['100vh']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={5}>\n            <Box>Try to beat the high score!</Box>\n            <Button\n              onClick={() => props.setView('play')}\n              variantColor=\"blue\"\n              variant=\"outline\"\n              _hover={{ border: '1px solid blue' }}\n              _focus={{ outline: 'none' }}\n            >\n              Start\n            </Button>\n            <Button\n              onClick={() => onOpen()}\n              color=\"gold\"\n              variant=\"outline\"\n              _hover={{ border: '1px solid yellow' }}\n              _focus={{ outline: 'none' }}\n            >\n              Highscore\n            </Button>\n          </Stack>\n        </Flex>\n        {/* <Modal isCentered isOpen={isOpen} onClose={onClose} closeOnEsc>\n          <ModalContent\n            border=\"5px solid gold\"\n            backgroundColor=\"black\"\n            borderRadius=\"10px\"\n            height=\"600px\"\n            opacity={1}\n          >\n            <ModalHeader backgroundColor=\"gold\" width=\"100%\" textAlign=\"center\">\n              Highscore\n            </ModalHeader>\n            <ModalBody></ModalBody>\n            <ModalFooter backgroundColor=\"gold\" width=\"100%\" textAlign=\"center\">\n              <Button\n                variant=\"unstyled\"\n                m=\"auto\"\n                size=\"sm\"\n                onClick={onClose}\n                _focus={{ outline: 'none' }}\n                _hover={{ color: 'black' }}\n              >\n                Close\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        </Modal> */}\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}