{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\nexport default function Highscore(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(''),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(new Array(10)),\n      highscores = _useState2[0],\n      setHighscores = _useState2[1];\n\n  var handleSave = function handleSave() {\n    // props.setView('home');\n    addHighscore(props.newScore, username, props.mode);\n  };\n\n  useEffect(function () {\n    getHighscores('add');\n  }, []);\n\n  var getHighscores = function getHighscores(mode) {\n    fetch(\"/api/gethighscores\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode: mode\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        setHighscores(data.data);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  var addHighscore = function addHighscore(score, username, mode) {\n    fetch(\"/api/addhighscore\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        score: score,\n        username: username,\n        mode: mode\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.success) {\n        setHighscores(data.data);\n        props.setIsNewHighscore(false);\n      }\n    })[\"catch\"](function (err) {\n      console.error(\"Something wrong happened while getting messages:\".concat(err.message));\n    });\n  };\n\n  var convertDate = function convertDate(date) {\n    return \"\".concat(new Date(date).getMonth() + 1, \"/\").concat(new Date(date).getDate(), \"/\").concat(new Date(date).getFullYear());\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    height: ['100vh'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Flex // p={10}\n  , {\n    align: \"center\",\n    justify: \"center\",\n    border: \"5px solid gold\",\n    borderRadius: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 5,\n    height: \"600px\",\n    width: \"420px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    height: \"35px\",\n    textAlign: \"center\",\n    backgroundColor: \"gold\",\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Highscore\"), __jsx(Box, {\n    height: \"485px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, props.isNewHighscore && __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(Box, {\n    width: \"75px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, props.newScore), __jsx(Input, {\n    autoFocus: true,\n    width: \"120px\",\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    mx: 5,\n    maxLength: 8,\n    borderBottom: \"1px solid white\",\n    value: username,\n    onKeyDown: function onKeyDown(e) {\n      if (e.key === 'Enter' && e.target.value.trim().length > 0) {\n        handleSave();\n      }\n    },\n    onChange: function onChange(e) {\n      return setUsername(e.target.value.trim());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), __jsx(Box, {\n    width: \"150px\",\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, convertDate(new Date()))), highscores.map(function (highscore) {\n    return __jsx(Flex, {\n      key: highscore._id,\n      align: \"center\",\n      justify: \"space-evenly\",\n      direction: \"row\",\n      p: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, __jsx(Box, {\n      width: \"75px\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, highscore.score), __jsx(Box, {\n      mx: 5,\n      width: \"120px\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, highscore.username), __jsx(Box, {\n      width: \"150px\",\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, convertDate(highscore.createdAt)));\n  })), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    backgroundColor: \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, props.isNewHighscore && __jsx(Button, {\n    onClick: function onClick() {\n      return handleSave();\n    },\n    variant: \"ghost\",\n    color: \"black\",\n    _hover: {\n      border: 'none',\n      color: 'grey'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, \"Save\"), __jsx(Button, {\n    onClick: function onClick() {\n      props.setIsNewHighscore(false);\n      props.setView('home');\n    },\n    variant: \"ghost\",\n    color: \"black\",\n    _hover: {\n      border: 'none',\n      color: 'grey'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))));\n}\n\n_s(Highscore, \"P07OzdEc90OCrwjsEImj3UeLamc=\");\n\n_c = Highscore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Highscore\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx"],"names":["React","useState","useEffect","Flex","Button","Stack","Box","Input","Highscore","props","username","setUsername","Array","highscores","setHighscores","handleSave","addHighscore","newScore","mode","getHighscores","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","err","console","error","message","score","setIsNewHighscore","convertDate","date","Date","getMonth","getDate","getFullYear","isNewHighscore","e","key","target","value","trim","length","map","highscore","_id","createdAt","border","color","outline","setView"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\n\nexport default function Highscore(props: any) {\n  const [username, setUsername] = useState('');\n  const [highscores, setHighscores] = useState(new Array(10));\n\n  const handleSave = () => {\n    // props.setView('home');\n    addHighscore(props.newScore, username, props.mode);\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = (mode: string) => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          setHighscores(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const addHighscore = (score: number, username: string, mode: string) => {\n    fetch(`/api/addhighscore`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        score,\n        username,\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          setHighscores(data.data);\n          props.setIsNewHighscore(false);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const convertDate = (date: Date) => {\n    return `${new Date(date).getMonth() + 1}/${new Date(\n      date\n    ).getDate()}/${new Date(date).getFullYear()}`;\n  };\n\n  return (\n    <>\n      <Flex width={['100%']} height={['100vh']} align=\"center\" justify=\"center\">\n        <Flex\n          // p={10}\n          align=\"center\"\n          justify=\"center\"\n          border=\"5px solid gold\"\n          borderRadius=\"10px\"\n        >\n          <Stack spacing={5} height=\"600px\" width=\"420px\">\n            <Box\n              height=\"35px\"\n              textAlign=\"center\"\n              backgroundColor=\"gold\"\n              color=\"black\"\n            >\n              Highscore\n            </Box>\n            <Box height=\"485px\">\n              {props.isNewHighscore && (\n                <Flex\n                  align=\"center\"\n                  justify=\"space-evenly\"\n                  direction=\"row\"\n                  p={2}\n                >\n                  <Box width=\"75px\" textAlign=\"center\">\n                    {props.newScore}\n                  </Box>\n                  <Input\n                    autoFocus\n                    width=\"120px\"\n                    variant=\"unstyled\"\n                    textAlign=\"center\"\n                    mx={5}\n                    maxLength={8}\n                    borderBottom=\"1px solid white\"\n                    value={username}\n                    onKeyDown={(e: any) => {\n                      if (\n                        e.key === 'Enter' &&\n                        e.target.value.trim().length > 0\n                      ) {\n                        handleSave();\n                      }\n                    }}\n                    onChange={(e: any) => setUsername(e.target.value.trim())}\n                  />\n                  <Box width=\"150px\" textAlign=\"center\">\n                    {convertDate(new Date())}\n                  </Box>\n                </Flex>\n              )}\n              {highscores.map((highscore: any) => {\n                return (\n                  <Flex\n                    key={highscore._id}\n                    align=\"center\"\n                    justify=\"space-evenly\"\n                    direction=\"row\"\n                    p={2}\n                  >\n                    <Box width=\"75px\" textAlign=\"center\">\n                      {highscore.score}\n                    </Box>\n                    <Box mx={5} width=\"120px\" textAlign=\"center\">\n                      {highscore.username}\n                    </Box>\n                    <Box width=\"150px\" textAlign=\"center\">\n                      {convertDate(highscore.createdAt)}\n                    </Box>\n                  </Flex>\n                );\n              })}\n            </Box>\n            <Flex\n              align=\"center\"\n              justify=\"space-evenly\"\n              direction=\"row\"\n              backgroundColor=\"gold\"\n            >\n              {props.isNewHighscore && (\n                <Button\n                  onClick={() => handleSave()}\n                  variant=\"ghost\"\n                  color=\"black\"\n                  _hover={{ border: 'none', color: 'grey' }}\n                  _focus={{ outline: 'none' }}\n                >\n                  Save\n                </Button>\n              )}\n              <Button\n                onClick={() => {\n                  props.setIsNewHighscore(false);\n                  props.setView('home');\n                }}\n                variant=\"ghost\"\n                color=\"black\"\n                _hover={{ border: 'none', color: 'grey' }}\n                _focus={{ outline: 'none' }}\n              >\n                Cancel\n              </Button>\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}