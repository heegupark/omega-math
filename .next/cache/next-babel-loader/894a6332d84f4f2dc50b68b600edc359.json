{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/main.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport Start from './start';\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, useDisclosure, SlideIn } from '@chakra-ui/core';\nexport default function Main() {\n  const {\n    0: view,\n    1: setView\n  } = useState('start');\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return __jsx(React.Fragment, null, __jsx(Start, {\n    setView: setView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(SlideIn, {\n    in: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, styles => __jsx(Modal, {\n    onClose: onClose,\n    isOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(ModalOverlay, {\n    opacity: styles.opacity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(ModalContent, _extends({\n    pb: 5\n  }, styles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, \"Login now\"), __jsx(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }), __jsx(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \"Highscore\")))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/main.tsx"],"names":["React","useState","Start","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","useDisclosure","SlideIn","Main","view","setView","isOpen","onOpen","onClose","styles","opacity"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,KADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAMEC,SANF,EAOEC,gBAPF,EAQEC,aARF,EASEC,OATF,QAWO,iBAXP;AAaA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BP,aAAa,EAAjD;AACA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEI,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,EAAE,EAAEC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIG,MAAD,IACC,MAAC,KAAD;AAAO,IAAA,OAAO,EAAED,OAAhB;AAAyB,IAAA,MAAM,EAAE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEC,MAAM,CAACC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAc,IAAA,EAAE,EAAE;AAAlB,KAAyBD,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CAFF,CAFJ,CAFF,CADF;AAiBD","sourcesContent":["import React, { useState } from 'react';\nimport Start from './start';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  SlideIn,\n  Scale,\n} from '@chakra-ui/core';\n\nexport default function Main() {\n  const [view, setView] = useState('start' as any);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Start setView={setView} />\n      <SlideIn in={isOpen}>\n        {(styles) => (\n          <Modal onClose={onClose} isOpen={true}>\n            <ModalOverlay opacity={styles.opacity} />\n            <ModalContent pb={5} {...styles}>\n              <ModalHeader>Login now</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>Highscore</ModalBody>\n            </ModalContent>\n          </Modal>\n        )}\n      </SlideIn>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}