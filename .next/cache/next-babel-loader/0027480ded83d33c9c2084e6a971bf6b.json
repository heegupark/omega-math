{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Flex, Button, Box, Stack } from '@chakra-ui/core';\nimport { BiHomeAlt } from 'react-icons/bi';\nexport default function Play(props) {\n  _s();\n\n  var _useState = useState([]),\n      numbers = _useState[0],\n      setNumbers = _useState[1];\n\n  var _useState2 = useState(1),\n      level = _useState2[0],\n      setLevel = _useState2[1];\n\n  var generateNumbers = function generateNumbers() {\n    var num1 = Math(Math.random() * level);\n    var num2 = Math.random() * (level + 1);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    m: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    color: \"gold\",\n    fontSize: \"32px\",\n    variant: \"ghost\",\n    _hover: {\n      color: 'white'\n    },\n    _active: {\n      bg: 'none'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    onClick: function onClick() {\n      return props.setView('start');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(BiHomeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }))), __jsx(Flex, {\n    width: ['100%'],\n    height: ['100%'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"122\"), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"+\"), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"232\"), __jsx(Box, {\n    width: \"100px\",\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"=?\")))))));\n}\n\n_s(Play, \"V+YeAG/wCazNeelrzuCzXvJz8OE=\");\n\n_c = Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/play.tsx"],"names":["React","useState","Flex","Button","Box","Stack","BiHomeAlt","Play","props","numbers","setNumbers","level","setLevel","generateNumbers","num1","Math","random","num2","color","bg","outline","setView"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Flex, Button, Box, Text, Stack } from '@chakra-ui/core';\nimport { BiHomeAlt } from 'react-icons/bi';\n\nexport default function Play(props: any) {\n  const [numbers, setNumbers] = useState([]);\n  const [level, setLevel] = useState(1);\n  const generateNumbers = () => {\n    const num1 = Math(Math.random() * level);\n    const num2 = Math.random() * (level + 1);\n  };\n\n  return (\n    <>\n      <Box m=\"20px\">\n        <Button\n          color=\"gold\"\n          fontSize=\"32px\"\n          variant=\"ghost\"\n          _hover={{ color: 'white' }}\n          _active={{ bg: 'none' }}\n          _focus={{ outline: 'none' }}\n          onClick={() => props.setView('start')}\n        >\n          <BiHomeAlt />\n        </Button>\n      </Box>\n      <Flex width={['100%']} height={['100%']} align=\"center\" justify=\"center\">\n        <Flex align=\"center\" justify=\"center\">\n          <Stack spacing={5}>\n            <Flex align=\"center\" justify=\"center\" direction=\"row\">\n              <Stack isInline>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  122\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  +\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  232\n                </Box>\n                <Box width=\"100px\" textAlign=\"center\" fontSize=\"40px\">\n                  =?\n                </Box>\n              </Stack>\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}