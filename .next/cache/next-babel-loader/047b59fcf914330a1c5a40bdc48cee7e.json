{"ast":null,"code":"var _jsxFileName = \"/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\nexport default function Highscore(props) {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: highscores,\n    1: setHighscores\n  } = useState([]);\n\n  const handleSave = () => {\n    props.setView('home');\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = mode => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        mode\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        console.log(data.data);\n        setHighscores(data.data);\n      }\n    }).catch(err => {\n      console.error(`Something wrong happened while getting messages:${err.message}`);\n    });\n  };\n\n  const convertDate = date => {\n    return `${new Date(date).getMonth() + 1}/${new Date(date).getDate()}/${new Date(date).getFullYear()}`;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Flex, {\n    width: ['100%'],\n    height: ['100vh'],\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    p: 10,\n    align: \"center\",\n    justify: \"center\",\n    border: \"5px solid gold\",\n    borderRadius: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    spacing: 2,\n    height: \"600px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Highscore\"), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(Box, {\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, props.score), __jsx(Input, {\n    autoFocus: true,\n    width: \"150px\",\n    variant: \"unstyled\",\n    textAlign: \"center\",\n    fontSize: \"32px\",\n    type: \"number\",\n    mx: 5,\n    borderBottom: \"1px solid white\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, convertDate(new Date()))), highscores.map(highscore => {\n    return __jsx(Flex, {\n      key: highscore._id,\n      align: \"center\",\n      justify: \"space-evenly\",\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, __jsx(Box, {\n      width: \"100px\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, highscore.score), __jsx(Box, {\n      mx: 5,\n      width: \"150px\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, highscore.username), __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, convertDate(highscore.createdAt)));\n  }), __jsx(Flex, {\n    align: \"center\",\n    justify: \"space-evenly\",\n    direction: \"row\",\n    pos: \"fixed\",\n    bottom: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: () => handleSave(),\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid blue'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Save\"), __jsx(Button, {\n    onClick: () => props.setView('home'),\n    variant: \"outline\",\n    _hover: {\n      border: '1px solid grey'\n    },\n    _focus: {\n      outline: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))));\n}","map":{"version":3,"sources":["/Users/heegupark/Desktop/Workspace/MyProject/omega-math/components/highscore.tsx"],"names":["React","useState","useEffect","Flex","Button","Stack","Box","Input","Highscore","props","username","setUsername","highscores","setHighscores","handleSave","setView","getHighscores","mode","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","console","log","catch","err","error","message","convertDate","date","Date","getMonth","getDate","getFullYear","score","e","target","value","map","highscore","_id","createdAt","border","outline"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Flex, Button, Stack, Box, Input } from '@chakra-ui/core';\n\nexport default function Highscore(props: any) {\n  const [username, setUsername] = useState('');\n  const [highscores, setHighscores] = useState([]);\n\n  const handleSave = () => {\n    props.setView('home');\n  };\n\n  useEffect(() => {\n    getHighscores('add');\n  }, []);\n\n  const getHighscores = (mode: string) => {\n    fetch(`/api/gethighscores`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        mode,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data: any) => {\n        if (data.success) {\n          console.log(data.data);\n          setHighscores(data.data);\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `Something wrong happened while getting messages:${err.message}`\n        );\n      });\n  };\n\n  const convertDate = (date: Date) => {\n    return `${new Date(date).getMonth() + 1}/${new Date(\n      date\n    ).getDate()}/${new Date(date).getFullYear()}`;\n  };\n\n  return (\n    <>\n      <Flex width={['100%']} height={['100vh']} align=\"center\" justify=\"center\">\n        <Flex\n          p={10}\n          align=\"center\"\n          justify=\"center\"\n          border=\"5px solid gold\"\n          borderRadius=\"10px\"\n        >\n          <Stack spacing={2} height=\"600px\">\n            <Box textAlign=\"center\">Highscore</Box>\n            <Flex align=\"center\" justify=\"space-evenly\" direction=\"row\">\n              <Box width=\"100px\">{props.score}</Box>\n              <Input\n                autoFocus\n                width=\"150px\"\n                variant=\"unstyled\"\n                textAlign=\"center\"\n                fontSize=\"32px\"\n                type=\"number\"\n                mx={5}\n                borderBottom=\"1px solid white\"\n                value={username}\n                onChange={(e: any) => setUsername(e.target.value)}\n              />\n              <Box>{convertDate(new Date())}</Box>\n            </Flex>\n            {highscores.map((highscore: any) => {\n              return (\n                <Flex\n                  key={highscore._id}\n                  align=\"center\"\n                  justify=\"space-evenly\"\n                  direction=\"row\"\n                >\n                  <Box width=\"100px\" textAlign=\"center\">\n                    {highscore.score}\n                  </Box>\n                  <Box mx={5} width=\"150px\" textAlign=\"center\">\n                    {highscore.username}\n                  </Box>\n                  <Box>{convertDate(highscore.createdAt)}</Box>\n                </Flex>\n              );\n            })}\n            <Flex\n              align=\"center\"\n              justify=\"space-evenly\"\n              direction=\"row\"\n              pos=\"fixed\"\n              bottom=\"0\"\n            >\n              <Button\n                onClick={() => handleSave()}\n                variant=\"outline\"\n                _hover={{ border: '1px solid blue' }}\n                _focus={{ outline: 'none' }}\n              >\n                Save\n              </Button>\n              <Button\n                onClick={() => props.setView('home')}\n                variant=\"outline\"\n                _hover={{ border: '1px solid grey' }}\n                _focus={{ outline: 'none' }}\n              >\n                Cancel\n              </Button>\n            </Flex>\n          </Stack>\n        </Flex>\n      </Flex>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}